{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","getTime","time","Math","floor","slice","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","during","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.572409a4.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({ audioRef, currentSong, isPlaying, setIsPlaying, setSongInfo, songInfo, songs, setCurrentSong, setSongs }) => {\n\n    const activeLibraryHandler = (nextPrev) => {\n        const newSongs = songs.map((song) => {\n            if(song.id === nextPrev.id) {\n                return {\n                    ...song,\n                    active: true,\n                };\n            } else {\n                return {\n                    ...song,\n                    active: false,\n                };\n            }\n        });\n        setSongs(newSongs);\n    }\n\n    //Event Handlers\n    const playSongHandler = () => {\n        if(isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        } else {\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    };\n\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value\n        setSongInfo({...songInfo, currentTime: e.target.value})\n    };\n\n    const skipTrackHandler = async (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n        if(direction === \"skip-forward\") {\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n        }\n        if(direction === \"skip-back\") {\n            if((currentIndex - 1) % songs.length === -1) {\n                await setCurrentSong(songs[songs.length - 1]);\n                activeLibraryHandler(songs[songs.length - 1]);\n                if(isPlaying) audioRef.current.play();\n                return;\n            }\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n        }\n        if(isPlaying) audioRef.current.play();\n    };\n\n    //Add the styles\n    const trackAnim = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    };\n\n    const getTime = (time) => {\n        return(\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        );\n    };\n\n    return(\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\n                    <input \n                        min={0} \n                        max={songInfo.duration || 0} \n                        value={songInfo.currentTime} \n                        onChange={dragHandler}\n                        type=\"range\"\n                    />\n                    <div style={trackAnim} className=\"animate-track\"></div>\n                </div>\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon onClick={() => skipTrackHandler(\"skip-back\")} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n                <FontAwesomeIcon \n                    onClick={playSongHandler} \n                    className=\"play\" \n                    size=\"2x\" \n                    icon={isPlaying ? faPause : faPlay} \n                />\n                <FontAwesomeIcon onClick={() => skipTrackHandler(\"skip-forward\")} className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\n            </div>\n        </div>\n    );\n};\n\nexport default Player;","import React from 'react';\n\nconst Song = ({ currentSong, isPlaying }) => {\n    return(\n        <div className=\"song-container\">\n            <img className={isPlaying ? \"song-playing\" : \"\"} alt={currentSong.name} src={currentSong.cover}></img>\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n        </div>\n    );\n}\n\nexport default Song;","import React from 'react';\nimport Ripples from 'react-ripples';\n\nconst LibrarySong = ({ song, songs, setCurrentSong, audioRef, isPlaying, setSongs, id }) => {\n\n    const songSelectHandler = async () => {\n        await setCurrentSong(song);\n        //Add Active State\n        const newSongs = songs.map((song) => {\n            if(song.id === id) {\n                return {\n                    ...song,\n                    active: true,\n                };\n            } else {\n                return {\n                    ...song,\n                    active: false,\n                };\n            }\n        });\n        setSongs(newSongs);\n        //Check if the song is playing\n        if(isPlaying) audioRef.current.play();\n    }\n\n    return(\n        <Ripples color=\"#20bde4\" during={2200}>\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? \"selected\" : \"\"}`}>\n            <img alt={song.name} src={song.cover}></img>\n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n        </div>\n        </Ripples>\n    );\n}\n\nexport default LibrarySong;","import React from 'react';\nimport LibrarySong from './LibrarySong';\n\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus }) => {\n    return(\n        <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map((song) => (\n                    <LibrarySong  \n                        songs={songs} \n                        setCurrentSong={setCurrentSong} \n                        song={song}\n                        id={song.id}\n                        key={song.id}\n                        audioRef={audioRef}\n                        isPlaying={isPlaying}\n                        setSongs={setSongs}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Library;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n    return(\n        <nav>\n            <h1>Waves</h1>\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\n                Library\n                <FontAwesomeIcon icon={faMusic} />\n            </button>\n        </nav>\n    );\n}\n\nexport default Nav;","import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n  return [\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n    {\n        name: \"Going Back\",\n        artist: \"Swørn\",\n        cover: \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg\",\n        id: uuidv4(),\n        active: false,\n        color: [\"darkcyan\", \"lightpink\"],\n        audio: \"https://mp3.chillhop.com/serve.php/?mp3=10310\"\n    },\n    {\n        name: \"Yesterdays\",\n        artist: \"xander.\",\n        cover: \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-1024x1024.jpg\",\n        id: uuidv4(),\n        active: false,\n        color: [\"darkcyan\", \"lightpink\"],\n        audio: \"https://mp3.chillhop.com/serve.php/?mp3=10333\",\n    }\n  ];\n}\n\nexport default chillHop;","import React, { useRef, useState } from 'react';\n//Import Styles\nimport \"./styles/app.scss\";\n//Adding Components\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n//Import Data\nimport data from './data';\n\nfunction App() {\n\n  //Ref\n  const audioRef = useRef(null);\n\n  //State \n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const[libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Calculate Percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n    setSongInfo({\n      ...songInfo, \n      currentTime: current, \n      duration: duration, \n      animationPercentage: animation,\n    })\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song isPlaying={isPlaying} currentSong={currentSong} />\n      <Player \n        audioRef={audioRef} \n        isPlaying={isPlaying} \n        setIsPlaying={setIsPlaying} \n        currentSong={currentSong} \n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library \n        audioRef={audioRef} \n        songs={songs} \n        setCurrentSong={setCurrentSong} \n        isPlaying={isPlaying} \n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio \n        onTimeUpdate={timeUpdateHandler} \n        onLoadedMetadata={timeUpdateHandler} \n        ref={audioRef} \n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}